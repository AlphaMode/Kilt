--- NetworkEvent.java
+++ NetworkEvent.java
@@ -47,4 +47,10 @@
     }
 
+    public NetworkEvent() { // for some reason, if this doesn't exist, EventBus genuinely starts to panic. Why does it work in Forge and not here?
+        this.source = null;
+        this.payload = null;
+        this.loginIndex = -1;
+    }
+
     public NetworkEvent(final Supplier<Context> source) {
         this.source = source;
@@ -70,4 +76,7 @@
     public static class ServerCustomPayloadEvent extends NetworkEvent
     {
+        public ServerCustomPayloadEvent() {
+        }
+
         ServerCustomPayloadEvent(final ICustomPacket<?> payload, final Supplier<Context> source) {
             super(payload, source);
@@ -76,4 +85,7 @@
     public static class ClientCustomPayloadEvent extends NetworkEvent
     {
+        public ClientCustomPayloadEvent() {
+        }
+
         ClientCustomPayloadEvent(final ICustomPacket<?> payload, final Supplier<Context> source) {
             super(payload, source);
@@ -81,4 +93,6 @@
     }
     public static class ServerCustomPayloadLoginEvent extends ServerCustomPayloadEvent {
+        public ServerCustomPayloadLoginEvent() {
+        }
         ServerCustomPayloadLoginEvent(ICustomPacket<?> payload, Supplier<Context> source)
         {
@@ -88,4 +102,6 @@
 
     public static class ClientCustomPayloadLoginEvent extends ClientCustomPayloadEvent {
+        public ClientCustomPayloadLoginEvent() {
+        }
         ClientCustomPayloadLoginEvent(ICustomPacket<?> payload, Supplier<Context> source)
         {
@@ -98,4 +114,9 @@
         private final boolean isLocal;
 
+        public GatherLoginPayloadsEvent() {
+            collected = null;
+            isLocal = false;
+        }
+
         public GatherLoginPayloadsEvent(final List<NetworkRegistry.LoginPayload> loginPayloadList, boolean isLocal) {
             this.collected = loginPayloadList;
@@ -118,4 +139,6 @@
 
     public static class LoginPayloadEvent extends NetworkEvent {
+        public LoginPayloadEvent() {}
+
         LoginPayloadEvent(final FriendlyByteBuf payload, final Supplier<Context> source, final int loginIndex) {
             super(payload, source, loginIndex);
@@ -137,4 +160,8 @@
         private final RegistrationChangeType changeType;
 
+        public ChannelRegistrationChangeEvent() {
+            changeType = null;
+        }
+
         ChannelRegistrationChangeEvent(final Supplier<Context> source, RegistrationChangeType changeType) {
             super(source);
