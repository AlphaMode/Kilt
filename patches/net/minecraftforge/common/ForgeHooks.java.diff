--- ForgeHooks.java
+++ ForgeHooks.java
@@ -33,4 +33,5 @@
 
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
+import net.fabricmc.fabric.api.transfer.v1.transaction.Transaction;
 import net.minecraft.ResourceLocationException;
 import net.minecraft.advancements.Advancement;
@@ -111,4 +112,5 @@
 import net.minecraft.world.level.biome.MobSpawnSettings;
 import net.minecraftforge.common.crafting.conditions.ICondition;
+import net.minecraftforge.common.extensions.IForgeBlockState;
 import net.minecraftforge.common.loot.IGlobalLootModifier;
 import net.minecraftforge.common.loot.LootModifierManager;
@@ -191,4 +193,7 @@
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
+import xyz.bluspring.kilt.injections.entity.AttributeSupplierBuilderInjection;
+import xyz.bluspring.kilt.injections.world.inventory.AnvilMenuInjection;
+import xyz.bluspring.kilt.injections.world.level.LevelInjection;
 
 public class ForgeHooks
@@ -238,5 +243,5 @@
                 te = level.getBlockEntity(pos);
 
-            result = state.getCloneItemStack(target, level, pos, player);
+            result = ((IForgeBlockState) state).getCloneItemStack(target, level, pos, player);
 
             if (result.isEmpty())
@@ -396,5 +401,5 @@
         if (!ForgeConfig.SERVER.fullBoundingBoxLadders.get())
         {
-            return state.isLadder(level, pos, entity) ? Optional.of(pos) : Optional.empty();
+            return ((IForgeBlockState) state).isLadder(level, pos, entity) ? Optional.of(pos) : Optional.empty();
         }
         else
@@ -412,5 +417,5 @@
                         BlockPos tmp = new BlockPos(x2, y2, z2);
                         state = level.getBlockState(tmp);
-                        if (state.isLadder(level, tmp, entity))
+                        if (((IForgeBlockState) state).isLadder(level, tmp, entity))
                         {
                             return Optional.of(tmp);
@@ -669,6 +674,10 @@
             nbt = itemstack.getTag().copy();
 
+        // TODO: Figure out how this works
+        var transaction = Transaction.openOuter();
+        var capturedBlockSnapshots = ((LevelInjection) level).getCapturedBlockSnapshots();
+
         if (!(itemstack.getItem() instanceof BucketItem)) // if not bucket
-            level.captureBlockSnapshots = true;
+            level.snapshotParticipant().updateSnapshots(transaction);
 
         ItemStack copy = itemstack.copy();
@@ -677,5 +686,5 @@
             ForgeEventFactory.onPlayerDestroyItem(player, copy, context.getHand());
 
-        level.captureBlockSnapshots = false;
+        transaction.commit();
 
         if (ret.consumesAction())
@@ -689,6 +698,6 @@
             }
             @SuppressWarnings("unchecked")
-            List<BlockSnapshot> blockSnapshots = (List<BlockSnapshot>)level.capturedBlockSnapshots.clone();
-            level.capturedBlockSnapshots.clear();
+            List<BlockSnapshot> blockSnapshots = (List<BlockSnapshot>)capturedBlockSnapshots.clone();
+            capturedBlockSnapshots.clear();
 
             // make sure to set pre-placement item data for event
@@ -714,7 +723,7 @@
                 for (BlockSnapshot blocksnapshot : Lists.reverse(blockSnapshots))
                 {
-                    level.restoringBlockSnapshots = true;
+                    level.snapshotParticipant().updateSnapshots(transaction);
                     blocksnapshot.restore(true, false);
-                    level.restoringBlockSnapshots = false;
+                    transaction.commit();
                 }
             }
@@ -738,5 +747,5 @@
             }
         }
-        level.capturedBlockSnapshots.clear();
+        transaction.close();
 
         return ret;
@@ -750,5 +759,5 @@
 
         outputSlot.setItem(0, e.getOutput());
-        container.setMaximumCost(e.getCost());
+        ((AnvilMenuInjection) container).setMaximumCost(e.getCost());
         container.repairItemCountCost = e.getMaterialCost();
         return false;
@@ -940,6 +949,6 @@
             ret = ForgeEventFactory.loadLootTable(name, ret, lootTableManager);
 
-        if (ret != null)
-           ret.freeze();
+        //if (ret != null)
+        //   ((LootTableInjection) ret).freeze();
 
         return ret;
@@ -1253,5 +1262,5 @@
             return false;
         BlockState state = level.getBlockState(pos);
-        return ForgeEventFactory.getMobGriefingEvent(level, entity) && state.canEntityDestroy(level, pos, entity) && ForgeEventFactory.onEntityDestroyBlock(entity, pos, state);
+        return ForgeEventFactory.getMobGriefingEvent(level, entity) && ((IForgeBlockState) state).canEntityDestroy(level, pos, entity) && ForgeEventFactory.onEntityDestroyBlock(entity, pos, state);
     }
 
@@ -1363,6 +1372,6 @@
         {
             AttributeSupplier supplier = DefaultAttributes.getSupplier(k);
-            AttributeSupplier.Builder newBuilder = supplier != null ? new AttributeSupplier.Builder(supplier) : new AttributeSupplier.Builder();
-            newBuilder.combine(v);
+            AttributeSupplier.Builder newBuilder = supplier != null ? AttributeSupplierBuilderInjection.create(supplier) : new AttributeSupplier.Builder();
+            ((AttributeSupplierBuilderInjection) newBuilder).combine(v);
             FORGE_ATTRIBUTES.put(k, newBuilder.build());
         });
